run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux [a-zA-Z\-]*([0-9]+(\.[0-9]+)*)([a-z]*)/\1/p")'
# version require
if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0 " | bc)" -eq 1 ]' {
  run-shell "echo tmux 3.0+ is required"
  run-shell "sleep 1"
  run-shell "pkill tmux"
}

##########################
# prefix key && basic
##########################
unbind ^b
set -g prefix M-u
bind M-u send-prefix
bind Enter source-file ~/.tmux.conf \; display "leatchina's tmux config reloaded!"
set -g visual-activity on
set -g status-bg black
set -g status-fg white
set-option -g renumber-windows on

############################################################
# theme
############################################################
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ',*256col*:Tc'

#############################################################
# time
#############################################################
set -g escape-time 50 # in vim , ttimeoutlen is 60
set -g display-time 2500
set -g display-panes-time 2000
set -g history-limit 65535

#############################################################
# show session name, window & pane number, date and time on the right side of bottom line
#############################################################
set -g status-left-length 30
set -g status-left "#[fg=yellow]#S"
set -g status-right-length 60
set -g status-right "#[fg=red] W#I:P#P #[fg=blue]| %Y-%b-%d #[fg=white]| %k:%M "
set -g status-interval 1
set -g status-justify centre
set-window-option -g clock-mode-colour colour223
set-window-option -g automatic-rename off
set-window-option -g window-status-current-format "#I:#W#F"

#############################################################
# panel
#############################################################
set -g base-index 1
set -g pane-base-index 1
unbind Space
# select settings
set -g mouse on;
set-window-option -g window-status-current-style fg=cyan

# split windows
bind -n M-] split-window -h -c '#{pane_current_path}' \; send-keys "bash;clear" Enter
bind -n M-[ split-window -c '#{pane_current_path}' \; send-keys "bash;clear" Enter

# select pane
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-H if-shell "$is_vim" "send-keys M-H" "select-pane -L"
bind-key -n M-J if-shell "$is_vim" "send-keys M-J" "select-pane -D"
bind-key -n M-K if-shell "$is_vim" "send-keys M-K" "select-pane -U"
bind-key -n M-L if-shell "$is_vim" "send-keys M-L" "select-pane -R"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R

# resize pane
bind M-h resizep -L 8
bind M-j resizep -D 5
bind M-k resizep -U 5
bind M-l resizep -R 8

# kill pane
unbind x
bind-key -n M-O killp

# swap panel
bind [ swapp -U
bind ] swapp -D

# select the last pane
unbind e
bind r lastp

############################################################
# window
############################################################
unbind ^e
unbind c
unbind t
bind-key -n M-o new-window \; send-keys "bash;clear" Enter

# switch windows & move windows
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind-key -n M-P swap-window -d -t -1
bind-key -n M-N swap-window -d -t +1
bind-key -n S-Left  swap-window -t -1 \; previous-window
bind-key -n S-Right swap-window -t +1 \; next-window
# select the last window
bind M-o last
# kill window
bind M-q killw
# move window
bind-key M-t command-prompt 'move-window -t %%'

#############################################################
# choose tree
#############################################################
bind-key -n M-\\ choose-tree
#############################################################
# copy mode
#############################################################
set-window-option -g mode-keys vi
set -g focus-events on
bind y copy-mode
bind p paste-buffer
bind b list-buffers
bind -n M-\| copy-mode
bind-key -n M-\" choose-buffer

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-selection
bind-key -T copy-mode-vi q send -X cancel
bind-key -T copy-mode-vi a send -X append-selection-and-cancel
bind-key -T copy-mode-vi r send -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# show buffer and paste
bind p paste-buffer
bind b list-buffers
bind-key -n M-\" choose-buffer

############################################################
# rename
############################################################
unbind ,
unbind .
bind-key M-s command-prompt 'rename-session %%'
bind-key M-w command-prompt 'rename-window  %%'
